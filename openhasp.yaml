plate:
  objects:
    - obj: "p0b1" # temperature label on all pages
      properties:
        "text": '{{ states("sensor.outside_temp_2") }}°C'
    - obj: "p0b2" # time and date on all pages
      properties:
        "text": '{{ states("sensor.time_date") }}'
    - obj: "p0b6" # dropdown
      event:
        "down":
          - service: openhasp.next_page
    - obj: "p1b20" # arc slider
      properties:
        "val": >
          {% if state_attr(states('sensor.thermroom'),"temperature") is not none %}
          {{ state_attr(states('sensor.thermroom'),"temperature") | int * 10 }}
          {%- endif %}
        "min": >
          {% if state_attr(states('sensor.thermroom'),"min_temp") is not none %}
          {{ state_attr(states('sensor.thermroom'),"min_temp") | int * 10 }}
          {%- endif %}
        "max": >
          {% if state_attr(states('sensor.thermroom'),"max_temp") is not none %}
          {{ state_attr(states('sensor.thermroom'),"max_temp") | int * 10 }}
          {%- endif %}
        "opacity": "{{ 60 if (is_state(states('sensor.thermroom'),'unavailable') or is_state(states('sensor.thermroom'),'unknown')) else 255 }}"
        "click": "{{ 'false' if (is_state(states('sensor.thermroom'),'unavailable') or is_state(states('sensor.thermroom'),'unknown')) else 'true' }}"
        "line_color1": >
          {% if is_state_attr(states('sensor.thermroom'),'hvac_action','heating') %}
          {{ "#FF874D" }} 
          {%-else %}
          {{ "#51BDF9" }}
          {% endif %}
      event:
        "changed":
          - service: climate.set_temperature
            target:
              entity_id: "{{ states('sensor.thermroom') }}"
            data:
              temperature: "{{ val | int / 10 }}"
        "up":
          - service: climate.set_temperature
            target:
              entity_id: "{{ states('sensor.thermroom') }}"
            data:
              temperature: "{{ val | int / 10 }}"

    - obj: "p1b21" # gauge current temp
      properties:
        "val": >
          {% if not (is_state(states('sensor.thermroom'),'unavailable') or is_state(states('sensor.thermroom'),'unknown')) %}
          {{ state_attr(states('sensor.thermroom'),"current_temperature") | float (default=0) * 10 }}
          {%- endif %}
        "min": >
          {% if state_attr(states('sensor.thermroom'),'min_temp') is not none %}
          {{ state_attr(states('sensor.thermroom'),'min_temp') | int * 10 }}
          {%- endif %}
        "max": >
          {% if state_attr(states('sensor.thermroom'),'max_temp') is not none %}
          {{ state_attr(states('sensor.thermroom'),'max_temp') | int * 10 }}
          {%- endif %}
        "critical_value": >
          {% if state_attr(states('sensor.thermroom'),'max_temp') is not none %}
          {{ state_attr(states('sensor.thermroom'),'max_temp') | int * 10 + 1 }}
          {%- endif %}
        "label_count": >
          {% if state_attr(states('sensor.thermroom'),'max_temp') is not none %}
          {{ (state_attr(states('sensor.thermroom'),'max_temp') | int - state_attr(states('sensor.thermroom'),'min_temp') | int) /2 | int + 1 }}
          {%- endif %}
        "line_count": >
          {% if state_attr(states('sensor.thermroom'),'max_temp') is not none %}
          {{ (state_attr(states('sensor.thermroom'),'max_temp') | int - state_attr(states('sensor.thermroom'),'min_temp') | int) * 2 + 1 }}
          {%- endif %}
        "opacity": "{{ 60 if (is_state(states('sensor.thermroom'),'unavailable') or is_state(states('sensor.thermroom'),'unknown')) else 255 }}"

    - obj: "p1b23" # label current temp (and +/- with short/long touch)
      properties:
        "text": >
          {% if (is_state(states('sensor.thermroom'),'unavailable') or is_state(states('sensor.thermroom'),'unknown')) %}
          {{ "--.-" }}
          {%-else %}
          {{ state_attr(states('sensor.thermroom'),"current_temperature") | round(1,default=0) }}
          {%- endif %}
        "click": "{{ 'false' if (is_state(states('sensor.thermroom'),'unavailable') or is_state(states('sensor.thermroom'),'unknown')) else 'true' }}"
        "opacity": "{{ 60 if (is_state(states('sensor.thermroom'),'unavailable') or is_state(states('sensor.thermroom'),'unknown')) else 255 }}"
      event:
        "up":
          - service: climate.set_temperature
            target:
              entity_id: "{{ states('sensor.thermroom') }}"
            data:
              temperature: "{{ state_attr(states('sensor.thermroom'),'temperature') + state_attr(states('sensor.thermroom'),'target_temp_step') | float(default=1)}}"
        "long":
          - service: climate.set_temperature
            target:
              entity_id: "{{ states('sensor.thermroom') }}"
            data:
              temperature: "{{ state_attr(states('sensor.thermroom'),'temperature') - state_attr(states('sensor.thermroom'),'target_temp_step') | float(default=1)}}"

    - obj: "p1b25" # label target temp
      properties:
        "text": >
          {% if state_attr(states('sensor.thermroom'),'temperature') is not none %}
          {{ state_attr(states('sensor.thermroom'),'temperature') }}
          {%- endif %}
        "opacity": "{{ 60 if (is_state(states('sensor.thermroom'),'unavailable') or is_state(states('sensor.thermroom'),'unknown')) else 255 }}"

    - obj: "p1b41" # on/off switch
      properties:
        "val": "{{ 0 if (is_state(states('sensor.thermroom'), 'off') or is_state(states('sensor.thermroom'), 'unavailable')) else 1 }}"
        "click": "{{ 'false' if (is_state(states('sensor.thermroom'),'unavailable') or is_state(states('sensor.thermroom'),'unknown')) else 'true' }}"
        "opacity": "{{ 60 if (is_state(states('sensor.thermroom'),'unavailable') or is_state(states('sensor.thermroom'),'unknown')) else 255 }}"
      event:
        "down":
          - service: >
              {% if val == 0 -%}
              climate.turn_on
              {% else -%}
              climate.turn_off
              {% endif -%}
            target:
              entity_id: "{{ states('sensor.thermroom') }}"

    - obj: "p1b30" # tab dots
      event:
        "changed":
          - service: openhasp.command
            target:
              entity_id: openhasp.your_plate
            data:
              keyword: p1b26.text
              parameters: >
                {% if val == 0 %}
                {{ "#000000 \u2022# #909090 \u2022# #909090 \u2022#" | e }}
                {%-elif val == 1 %}
                {{ "#909090 \u2022# #000000 \u2022# #909090 \u2022#" | e }}
                {%-elif val == 2 %}
                {{ "#909090 \u2022# #909090 \u2022# #000000 \u2022#" | e }}
                {% endif %}

    # - obj: "p1b42" # dropdown with fan_modes
    #   properties:
    #     "options": >
    #       {% if state_attr(states('sensor.thermroom'),'fan_modes') is not none %}{%for mode in state_attr(states('sensor.thermroom'),'fan_modes')%}
    #       {%- if mode == 'auto' -%}
    #       Automatic{{"\n"|e}}
    #       {%- elif mode == 'low' -%}
    #       Low{{"\n"|e}}
    #       {%- elif mode == 'medium' -%}
    #       Medium{{"\n"|e}}
    #       {%- elif mode == 'high' -%}
    #       High{{"\n"|e}}
    #       {%- elif mode == 'turbo' -%}
    #       Turbo{{"\n"|e}}
    #       {%- endif -%}
    #       {%-if not loop.last%}{%-endif%}{%-endfor%}{% endif %}
    #     "click": "{{ 'false' if (is_state(states('sensor.thermroom'),'unavailable') or is_state(states('sensor.thermroom'),'unknown')) else 'true' }}"
    #     "val": >
    #       {% if not (is_state(states('sensor.thermroom'),'unavailable')) %}{%for mode in state_attr(states('sensor.thermroom'),'fan_modes')%}
    #       {{loop.index -1 if mode == state_attr(states('sensor.thermroom'),'fan_mode') }}
    #       {%-endfor%}{% endif %}
    #   event:
    #     "changed":
    #       - service: climate.set_fan_mode
    #         target:
    #           entity_id: "{{ states('sensor.thermroom') }}"
    #         data:
    #           fan_mode: >
    #             {% if text == "Automatic" -%}
    #             auto
    #             {% elif text == 'Low' -%}
    #             low
    #             {% elif text == 'Medium' -%}
    #             medium
    #             {% elif text == 'High' -%}
    #             high
    #             {% elif text == 'Turbo' -%}
    #             turbo
    #             {% endif -%}

    - obj: "p1b43" # dropdown with trv preset modes
      properties:
        "options": >
          {% if state_attr(states('sensor.thermroom'),'preset_modes') is not none %}{%for mode in state_attr(states('sensor.thermroom'),'preset_modes')%}
          {{ mode }} {{"\n"|e}}
          {%-if not loop.last%}{%-endif%}{%-endfor%}{% endif %}
        "click": "{{ 'false' if (is_state(states('sensor.thermroom'),'unavailable') or is_state(states('sensor.thermroom'),'unknown')) else 'true' }}"
        "val": >
          {% if not (is_state(states('sensor.thermroom'),'unavailable')) %}{%for mode in state_attr(states('sensor.thermroom'),'preset_modes')%}
          {{loop.index -1 if mode == state_attr(states('sensor.thermroom'),'preset_mode') }}
          {%-endfor%}{% endif %}
      event:
        "changed":
          - service: climate.set_preset_mode
            target:
              entity_id: "{{ states('sensor.thermroom') }}"
            data:
              preset_mode: >
                {{ text }}
    - obj: "p1b50" # Buttonmatrix for selecting the shelly TRV
      properties:
        "options": >
          ["Master","Baño1","Hall1","\n","Clara","Baño2","Hall2","\n","Arantza","Invit"," "]
        "toggle": 1
        "one_check": 1
      event:
        "down":
          - service: variable.set_variable
            data:
              value: >
                {% if val == 0 %}
                climate.trv_bed1
                {% elif val == 1 %}
                climate.trv_bath1
                {% elif val == 2 %}
                climate.trv_hall1
                {% elif val == 3 %}
                climate.trv_clara
                {% elif val == 4 %}
                climate.trv_bath2
                {% elif val == 5 %}
                climate.trv_hall2
                {% elif val == 6 %}
                climate.trv_arantza
                {% elif val == 7 %}
                climate.trv_invit
                {% elif val == 8 %}
                climate.trv_hall1
                {% endif %}
              variable: thermroom
